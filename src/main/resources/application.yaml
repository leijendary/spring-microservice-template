info:
  app:
    organization: leijendary
    artifact-id: "@[project.artifactId]"
    name: "@[project.name]"
    description: "@[project.description]"
    version: "@[project.version]"
  api:
    terms-of-service-url:
    contact:
      name: Jonathan Leijendekker
      url: https://leijendary.com
      email:
    license:
    license-url:
    vendor-extensions:

auth:
  audience: http://localhost:8080
  realm: Microservice Template API v1

cors:
  allow-credentials: true
  allowed-origins:
  allowed-origin-patterns: '*'
  allowed-headers: '*'
  allowed-methods:
    - get
    - post
    - put
    - patch
    - delete
    - options
    - head
    - trace
  exposed-headers: '*'

spring:
  application:
    name: ${info.app.name}
  autoconfigure:
    exclude:
      - org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration
      - org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration
  datasource:
    url:
    username:
    password:
    hikari:
      data-source-properties:
        cachePrepStmts: true
        rewriteBatchedStatements: true
        useServerPrepStmts: true
      maximum-pool-size: 50
  data:
    web:
      pageable:
        max-page-size: 100
        one-indexed-parameters: true
  jpa:
    open-in-view: false
    properties:
      hibernate:
        jdbc:
          batch_size: 1000
  messages:
    basename: messages.access, messages.error, messages.validation
  cache:
    type: redis
  cloud:
    discovery:
      client:
        simple:
          instances:
            google:
              - uri: https://google.com
    loadbalancer:
      retry:
        max-retries-on-same-service-instance: 3
        retry-on-all-operations: true
        retryable-status-codes: 502,503,521
    service-registry:
      auto-registration:
        enabled: false
    stream:
      bindings:
        sampleCreated-in-0:
          destination: ${info.app.artifact-id}.sample.created
        sampleCreated-out-0:
          destination: ${info.app.artifact-id}.sample.created
          producer:
            use-native-encoding: true
        sampleUpdated-in-0:
          destination: ${info.app.artifact-id}.sample.updated
        sampleUpdated-out-0:
          destination: ${info.app.artifact-id}.sample.updated
          producer:
            use-native-encoding: true
        sampleDeleted-in-0:
          destination: ${info.app.artifact-id}.sample.deleted
        sampleDeleted-out-0:
          destination: ${info.app.artifact-id}.sample.deleted
          producer:
            use-native-encoding: true
      function:
        definition: >-
          sampleCreated;
          sampleUpdated;
          sampleDeleted
      kafka:
        binder:
          auto-add-partitions: true
        streams:
          binder:
            configuration:
              default:
                key:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
                value:
                  serde: io.confluent.kafka.streams.serdes.avro.SpecificAvroSerde
            functions:
              sampleCreated:
                application-id: ${info.app.organization}.${info.app.artifact-id}.sample.created
              sampleUpdated:
                application-id: ${info.app.organization}.${info.app.artifact-id}.sample.updated
              sampleDeleted:
                application-id: ${info.app.organization}.${info.app.artifact-id}.sample.deleted
  kafka:
    bootstrap-servers:
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: io.confluent.kafka.streams.serdes.avro.SpecificAvroDeserializer
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: io.confluent.kafka.streams.serdes.avro.SpecificAvroSerializer
    properties:
      schema:
        registry:
          url:
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri:

server:
  compression:
    enabled: true
    mime-types: application/json
  error:
    whitelabel:
      enabled: false
  http2:
    enabled: true
